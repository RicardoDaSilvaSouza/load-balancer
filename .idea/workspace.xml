<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="8a404c3b-b677-45b3-977a-374b32584c76" name="Changes" comment="">
      <change afterPath="$PROJECT_DIR$/src/main/kotlin/com/iptiq/loadbalancer/core/model/Result.kt" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/kotlin/com/iptiq/loadbalancer/core/LoadBalancer.kt" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/kotlin/com/iptiq/loadbalancer/core/LoadBalancer.kt" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/kotlin/com/iptiq/loadbalancer/core/RandomLoadBalancer.kt" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/kotlin/com/iptiq/loadbalancer/core/RandomLoadBalancer.kt" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/kotlin/com/iptiq/loadbalancer/core/RoundRobinLoadBalancer.kt" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/kotlin/com/iptiq/loadbalancer/core/RoundRobinLoadBalancer.kt" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/test/kotlin/com/iptiq/loadbalancer/core/LoadBalancerTest.kt" beforeDir="false" afterPath="$PROJECT_DIR$/src/test/kotlin/com/iptiq/loadbalancer/core/LoadBalancerTest.kt" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="ExternalProjectsData">
    <projectState path="$PROJECT_DIR$">
      <ProjectState />
    </projectState>
  </component>
  <component name="ExternalProjectsManager">
    <system id="GRADLE">
      <state>
        <task path="$PROJECT_DIR$">
          <activation />
        </task>
        <projects_view />
      </state>
    </system>
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Kotlin Class" />
        <option value="Kotlin File" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="ProjectColorInfo">{
  &quot;associatedIndex&quot;: 2
}</component>
  <component name="ProjectId" id="2bD6ZMJ9F9OvsUN3aUFfh4siWEr" />
  <component name="ProjectViewState">
    <option name="autoscrollFromSource" value="true" />
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "Gradle.LoadBalancerTest.executor": "Run",
    "Gradle.LoadBalancerTest.given a round robin load balancer, when we remove a provider and the index belongs to this provider, it should not fail.executor": "Run",
    "Gradle.LoadBalancerTest.given an instance of any LoadBalancer, when reaching the maximum of requests, it should throw exception.executor": "Run",
    "Gradle.ProviderTest.executor": "Run",
    "Gradle.load-balancer [test].executor": "Run",
    "RunOnceActivity.OpenProjectViewOnStart": "true",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "kotlin-language-version-configured": "true"
  }
}]]></component>
  <component name="RunManager" selected="Gradle.LoadBalancerTest">
    <configuration name="LoadBalancerTest" type="GradleRunConfiguration" factoryName="Gradle" temporary="true">
      <ExternalSystemSettings>
        <option name="executionName" />
        <option name="externalProjectPath" value="$PROJECT_DIR$" />
        <option name="externalSystemIdString" value="GRADLE" />
        <option name="scriptParameters" value="" />
        <option name="taskDescriptions">
          <list />
        </option>
        <option name="taskNames">
          <list>
            <option value=":test" />
            <option value="--tests" />
            <option value="&quot;com.iptiq.loadbalancer.core.LoadBalancerTest&quot;" />
          </list>
        </option>
        <option name="vmOptions" />
      </ExternalSystemSettings>
      <ExternalSystemDebugServerProcess>false</ExternalSystemDebugServerProcess>
      <ExternalSystemReattachDebugProcess>true</ExternalSystemReattachDebugProcess>
      <DebugAllEnabled>false</DebugAllEnabled>
      <RunAsTest>true</RunAsTest>
      <method v="2" />
    </configuration>
    <configuration name="LoadBalancerTest.given a round robin load balancer, when we remove a provider and the index belongs to this provider, it should not fail" type="GradleRunConfiguration" factoryName="Gradle" temporary="true">
      <ExternalSystemSettings>
        <option name="executionName" />
        <option name="externalProjectPath" value="$PROJECT_DIR$" />
        <option name="externalSystemIdString" value="GRADLE" />
        <option name="scriptParameters" value="" />
        <option name="taskDescriptions">
          <list />
        </option>
        <option name="taskNames">
          <list>
            <option value=":test" />
            <option value="--tests" />
            <option value="&quot;com.iptiq.loadbalancer.core.LoadBalancerTest.given a round robin load balancer, when we remove a provider and the index belongs to this provider, it should not fail&quot;" />
          </list>
        </option>
        <option name="vmOptions" />
      </ExternalSystemSettings>
      <ExternalSystemDebugServerProcess>false</ExternalSystemDebugServerProcess>
      <ExternalSystemReattachDebugProcess>true</ExternalSystemReattachDebugProcess>
      <DebugAllEnabled>false</DebugAllEnabled>
      <RunAsTest>true</RunAsTest>
      <method v="2" />
    </configuration>
    <configuration name="LoadBalancerTest.given an instance of any LoadBalancer, when reaching the maximum of requests, it should throw exception" type="GradleRunConfiguration" factoryName="Gradle" temporary="true">
      <ExternalSystemSettings>
        <option name="executionName" />
        <option name="externalProjectPath" value="$PROJECT_DIR$" />
        <option name="externalSystemIdString" value="GRADLE" />
        <option name="scriptParameters" value="" />
        <option name="taskDescriptions">
          <list />
        </option>
        <option name="taskNames">
          <list>
            <option value=":test" />
            <option value="--tests" />
            <option value="&quot;com.iptiq.loadbalancer.core.LoadBalancerTest.given an instance of any LoadBalancer, when reaching the maximum of requests, it should throw exception&quot;" />
          </list>
        </option>
        <option name="vmOptions" />
      </ExternalSystemSettings>
      <ExternalSystemDebugServerProcess>false</ExternalSystemDebugServerProcess>
      <ExternalSystemReattachDebugProcess>true</ExternalSystemReattachDebugProcess>
      <DebugAllEnabled>false</DebugAllEnabled>
      <RunAsTest>true</RunAsTest>
      <method v="2" />
    </configuration>
    <configuration name="load-balancer [test]" type="GradleRunConfiguration" factoryName="Gradle" nameIsGenerated="true">
      <ExternalSystemSettings>
        <option name="executionName" />
        <option name="externalProjectPath" value="$PROJECT_DIR$" />
        <option name="externalSystemIdString" value="GRADLE" />
        <option name="scriptParameters" value="" />
        <option name="taskDescriptions">
          <list />
        </option>
        <option name="taskNames">
          <list>
            <option value="test" />
          </list>
        </option>
        <option name="vmOptions" />
      </ExternalSystemSettings>
      <ExternalSystemDebugServerProcess>true</ExternalSystemDebugServerProcess>
      <ExternalSystemReattachDebugProcess>true</ExternalSystemReattachDebugProcess>
      <DebugAllEnabled>false</DebugAllEnabled>
      <RunAsTest>false</RunAsTest>
      <method v="2" />
    </configuration>
    <list>
      <item itemvalue="Gradle.load-balancer [test]" />
      <item itemvalue="Gradle.LoadBalancerTest" />
      <item itemvalue="Gradle.LoadBalancerTest.given a round robin load balancer, when we remove a provider and the index belongs to this provider, it should not fail" />
      <item itemvalue="Gradle.LoadBalancerTest.given an instance of any LoadBalancer, when reaching the maximum of requests, it should throw exception" />
    </list>
    <recent_temporary>
      <list>
        <item itemvalue="Gradle.LoadBalancerTest" />
        <item itemvalue="Gradle.LoadBalancerTest.given a round robin load balancer, when we remove a provider and the index belongs to this provider, it should not fail" />
        <item itemvalue="Gradle.LoadBalancerTest.given an instance of any LoadBalancer, when reaching the maximum of requests, it should throw exception" />
      </list>
    </recent_temporary>
  </component>
  <component name="SharedIndexes">
    <attachedChunks>
      <set>
        <option value="jdk-21.0.1-openjdk-21.0.1-4caba194b151-9b16c6e2" />
        <option value="jdk-21.0.1-openjdk-21.0.1-8336523bb0d9-55c9c8bc" />
      </set>
    </attachedChunks>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="8a404c3b-b677-45b3-977a-374b32584c76" name="Changes" comment="" />
      <created>1705737358326</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1705737358326</updated>
    </task>
    <servers />
  </component>
</project>